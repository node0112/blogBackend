const User = require('../models/UserModel')
const bcrypt = require("bcryptjs")
const passport = require("passport"); // use other forms of auth
const { check, validationResult } = require("express-validator"); //validator
const async = require("async")
const jwt = require("jsonwebtoken")

const PostModel = require('../models/PostModel')
const helpers = require("./helpers/tokenHelpers")

const isAccessTokenValid = helpers.isAccessTokenValid
const splitAuthToken = helpers.splitAuthToken



exports.createPost = [ //create a post for user
    check("title")
    .trim()
    .isLength({min: 5})
    .withMessage("Title must have at least 5 characters"),
]
exports.fetchPosts = //fetch posts for user
     async (req,res,next)=>{
        // const errors = validationResult(req)
        const userId = req.params.userid
        console.log(userId)
        res.send(200)
    }

exports.addComment = [
    check("comment")
     .trim()
     .isLength({min: 5})
     .withMessage("Comment must have at least 5 characters")
     .escape(),

    check("date")
     .trim()
     .isDate()
     .withMessage("Invalid Date")
     .escape(),

    check("email")
    .isEmail()
    .withMessage("Invalid email")
    .trim()
    .escape(),

    async (req,res)=>{
        const errors = validationResult(req)
        if(!errors.isEmpty()){
            return res.json(errors)
        }
        const date = req.body.date
        const text = req.body.comment
        const user = req.body.email
        const comment = {
            user: user,
            date: date
        }
    }
]